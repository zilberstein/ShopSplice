{"version":3,"file":"/packages/universal-events:tests.js","sources":["universal-events/event_tests.js"],"names":[],"mappings":";;;;;;;;;AACA,yD;;AAEA,gD;AACA,kB;AACA,uB;;AAEA,sC;AACA,mB;AACA,qB;AACA,4D;AACA,uC;AACA,4D;AACA,+D;AACA,S;AACA,8B;AACA,0B;AACA,iB;AACA,M;;AAEA,8B;;AAEA,4C;AACA,iC;AACA,qB;AACA,S;AACA,yD;AACA,gD;AACA,oE;AACA,M;;AAEA,+E;AACA,4B;AACA,6B;AACA,+C;AACA,wC;AACA,4B;;AAEA,2B;;AAEA,+B;AACA,6B;AACA,+B;AACA,6B;;AAEA,4B;AACA,4B;AACA,4B;AACA,4B;AACA,+B;AACA,6B;;AAEA,8B;AACA,6B;AACA,+C;;AAEA,4B;AACA,gC;AACA,4B;AACA,+B;AACA,4B;AACA,+B;AACA,+B;AACA,gC;AACA,+B;AACA,gC;AACA,+B;AACA,iC;AACA,4B;AACA,gC;AACA,+B;AACA,iC;AACA,4B;AACA,gC;AACA,+B;AACA,iC;;AAEA,a;AACA,I;;AAEA,iB;AACA,gB;AACA,G","sourcesContent":["\nTinytest.add(\"universal-events - basic\", function(test) {\n\n  var runTest = function (testMissingHandlers) {\n    var msgs = [];\n    var listeners = [];\n\n    var createListener = function () {\n      var out = [];\n      msgs.push(out);\n      var ret = new UniversalEventListener(function(event) {\n        var node = event.currentTarget;\n        if (DomUtils.elementContains(document.body, node)) {\n          out.push(event.currentTarget.nodeName.toLowerCase());\n        }\n      }, testMissingHandlers);\n      listeners.push(ret);\n      return ret;\n    };\n\n    var L1 = createListener();\n\n    var check = function (event, expected) {\n      _.each(msgs, function (m) {\n        m.length = 0;\n      });\n      simulateEvent(DomUtils.find(d.node(), \"b\"), event);\n      for (var i = 0; i < listeners.length; i++)\n        test.equal(msgs[i], testMissingHandlers ? [] : expected[i]);\n    };\n\n    var d = OnscreenDiv(Meteor.render(\"<div><span><b>Hello</b></span></div>\"));\n    L1.addType('mousedown');\n    if (!testMissingHandlers)\n      L1.installHandler(d.node(), 'mousedown');\n    var x = ['b', 'span', 'div', 'div'];\n    check('mousedown', [x]);\n\n    check('mouseup', [[]]);\n\n    L1.removeType('mousedown');\n    check('mousedown', [[]]);\n    L1.removeType('mousedown');\n    check('mousedown', [[]]);\n\n    L1.addType('mousedown');\n    check('mousedown', [x]);\n    L1.addType('mousedown');\n    check('mousedown', [x]);\n    L1.removeType('mousedown');\n    check('mousedown', [[]]);\n\n    var L2 = createListener();\n    if (!testMissingHandlers)\n      L2.installHandler(d.node(), 'mousedown');\n\n    L1.addType('mousedown');\n    check('mousedown', [x, []]);\n    L2.addType('mousedown');\n    check('mousedown', [x, x]);\n    L2.addType('mousedown');\n    check('mousedown', [x, x]);\n    L1.removeType('mousedown');\n    check('mousedown', [[], x]);\n    L1.removeType('mousedown');\n    check('mousedown', [[], x]);\n    L2.removeType('mousedown');\n    check('mousedown', [[], []]);\n    L1.addType('mousedown');\n    check('mousedown', [x, []]);\n    L1.removeType('mousedown');\n    check('mousedown', [[], []]);\n    L2.addType('mousedown');\n    check('mousedown', [[], x]);\n    L2.removeType('mousedown');\n    check('mousedown', [[], []]);\n\n    d.kill();\n  };\n\n  runTest(false);\n  runTest(true);\n});\n"]}