{"version":3,"file":"/packages/compileLess:plugin.js","sources":["compileLess/plugin/compile-less.js"],"names":[],"mappings":";;;;;;;;;;AAAA,2B;AACA,+B;AACA,+B;AACA,0C;;AAEA,6D;AACA,mE;AACA,6C;AACA,gE;AACA,qE;AACA,qE;AACA,4D;AACA,W;AACA,G;;AAEA,mD;AACA,iB;AACA,uE;AACA,0E;AACA,yE;AACA,2B;AACA,qB;AACA,oE;AACA,I;;AAEA,qB;AACA,U;AACA,O;AACA,+C;AACA,mB;AACA,e;AACA,6D;AACA,+D;AACA,+D;AACA,uB;AACA,mD;AACA,sD;AACA,qD;AACA,0B;AACA,O;AACA,W;AACA,G;;AAEA,6B;AACA,yC;AACA,a;AACA,K;AACA,I;;AAEA,0E;AACA,mB;AACA,wD;AACA,e;AACA,G","sourcesContent":["var fs = Npm.require('fs');\nvar path = Npm.require('path');\nvar less = Npm.require('less');\nvar Future = Npm.require('fibers/future');\n\nPlugin.registerSourceHandler(\"less\", function (compileStep) {\n  // XXX annoying that this is replicated in .css, .less, and .styl\n  if (! compileStep.archMatches('browser')) {\n    // XXX in the future, might be better to emit some kind of a\n    // warning if a stylesheet is included on the server, rather than\n    // silently ignoring it. but that would mean you can't stick .css\n    // at the top level of your app, which is kind of silly.\n    return;\n  }\n\n  var source = compileStep.read().toString('utf8');\n  var options = {\n    // Use fs.readFileSync to process @imports. This is the bundler, so\n    // that's not going to cause concurrency issues, and it means that (a)\n    // we don't have to use Futures and (b) errors thrown by bugs in less\n    // actually get caught.\n    syncImport: true,\n    paths: [path.dirname(compileStep._fullInputPath)] // for @import\n  };\n\n  var f = new Future;\n  var css;\n  try {\n    less.render(source, options, f.resolver());\n    css = f.wait();\n  } catch (e) {\n    // less.render() is supposed to report any errors via its\n    // callback. But sometimes, it throws them instead. This is\n    // probably a bug in less. Be prepared for either behavior.\n    compileStep.error({\n      message: \"Less compiler error: \" + e.message,\n      sourcePath: e.filename || compileStep.inputPath,\n      line: e.line - 1,  // dunno why, but it matches\n      column: e.column + 1\n    });\n    return;\n  }\n\n  compileStep.addStylesheet({\n    path: compileStep.inputPath + \".css\",\n    data: css\n  });\n});;\n\n// Register lessimport files with the dependency watcher, without actually\n// processing them.\nPlugin.registerSourceHandler(\"lessimport\", function () {\n  // Do nothing\n});\n"]}