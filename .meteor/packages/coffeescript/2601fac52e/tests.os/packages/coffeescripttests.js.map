{"version":3,"file":"/packages/coffeescript:tests.js","sources":["coffeescript/coffeescript_test_setup.js","coffeescript/tests/coffeescript_tests.coffee","coffeescript/tests/coffeescript_strict_tests.coffee","coffeescript/tests/litcoffeescript_tests.litcoffee","coffeescript/tests/litcoffeescript_tests.coffee.md","coffeescript/coffeescript_tests.js"],"names":[],"mappings":";;;;;;;;AAAA,2B;;;;;;;;;;;;;;;;;;;;ACAA,CAAO,EAAyB,CAAhC,EAAM,gBAAN;;AAGA,CAHA,EAGqB,EAAhB,OAAL;;AAEA,CALA,CAKuC,CAAvC,CAAuC,IAA/B,CAAgC,eAAxC;CAAsD,GAAD,EAAJ;CAAV;A;;;;;;;;;;;;;;;;;ACLvC;;;;AAGA,CAHA,EAGI;;AAGJ,CANA,EAMI;;AACJ,CAPA,CAOA,IAPA,SAOK;;AAEL,CATA,CASsC,CAAtC,CAAsC,IAA9B,CAA+B,cAAvC;CACE,GAAI,CAAJ;CACK,CAA4B,CAAjC,CAAI,CAAJ;CAFoC;A;;;;;;;;;;;;;;;;;;ACLlC,CAAO,EAA4B,CAAnC,EAAM,mBAAN;;AACA,CADA,CACgD,CAAhD,CAAgD,IAAxC,CAAyC,wBAAjD;CAA+D,GAAD,EAAJ;CAAV;A;;;;;;;;;;;;;;;;;;ACDhD,CAAO,EAA2B,CAAlC,EAAM,kBAAN;;AACA,CADA,CACgD,CAAhD,CAAgD,IAAxC,CAAyC,wBAAjD;CAA+D,GAAD,EAAJ;CAAV;A;;;;;;;;;;;;;;;;;ACLpD,wD;AACA,6C;AACA,G;AACA,iE;AACA,gD;AACA,+C;AACA,G;;AAEA,iE;AACA,yC;AACA,6E;AACA,G","sourcesContent":["sharedFromJavascript = 135;\n","Meteor.__COFFEESCRIPT_PRESENT = true\n\n# This is read in coffeescript_strict_tests.coffee.\nshare.coffeeShared = 789\n\nTinytest.add \"coffeescript - compile\", (test) -> test.isTrue true\n","'use strict'\n\n# Another variable, which will stay in the var line.\nx = 5\n\n# This adds a utility function to the var line.\ny = []\nx in y\n\nTinytest.add \"coffeescript - shared\", (test) ->\n  test.equal share.coffeeShared, 789\n  test.equal sharedFromJavascript, 135\n","This file is just the same as `coffeescript_tests.coffee`, first we set a \nproperty, which we check for in `coffeescript_tests.js`, and then a trivial\ntestcase.\n\n    Meteor.__LITCOFFEESCRIPT_PRESENT = true\n    Tinytest.add \"literate coffeescript - compile\", (test) -> test.isTrue true\n","This file is just the same as `coffeescript_tests.coffee`, first we set a \nproperty, which we check for in `coffeescript_tests.js`, and then a trivial\ntestcase.\n\n    Meteor.__COFFEEMDSCRIPT_PRESENT = true\n    Tinytest.add \"markdown coffeescript - compile\", (test) -> test.isTrue true\n","Tinytest.add(\"coffeescript - presence\", function(test) {\n  test.isTrue(Meteor.__COFFEESCRIPT_PRESENT);\n});\nTinytest.add(\"literate coffeescript - presence\", function(test) {\n  test.isTrue(Meteor.__LITCOFFEESCRIPT_PRESENT);\n  test.isTrue(Meteor.__COFFEEMDSCRIPT_PRESENT);\n});\n\nTinytest.add(\"coffeescript - exported variable\", function(test) {\n  test.equal(COFFEESCRIPT_EXPORTED, 123);\n  test.equal(Package['coffeescript-test-helper'].COFFEESCRIPT_EXPORTED, 123);\n});"]}