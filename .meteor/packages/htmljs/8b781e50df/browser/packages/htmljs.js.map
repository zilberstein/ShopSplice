{"version":3,"file":"/packages/htmljs.js","sources":["htmljs/html.js"],"names":[],"mappings":";;;;;;;;AAAA,I;AACA,0D;AACA,qE;AACA,kD;AACA,E;AACA,+C;AACA,iB;AACA,6C;AACA,4B;AACA,4D;AACA,8B;AACA,Y;AACA,U;AACA,2D;AACA,oC;AACA,O;AACA,M;AACA,G;;AAEA,sE;AACA,2C;;AAEA,8D;AACA,6D;AACA,kE;AACA,yE;;AAEA,yC;;AAEA,mB;AACA,a;AACA,e;AACA,c;AACA,iB;AACA,c;AACA,c;AACA,gB;AACA,iB;AACA,gB;AACA,iB;AACA,c;AACA,a;AACA,kB;AACA,mB;AACA,mB;AACA,kB;AACA,iB;AACA,kB;AACA,gB;AACA,e;AACA,e;AACA,e;AACA,c;AACA,E;;AAEA,4C;AACA,+C;AACA,8E;;AAEA,oD;AACA,iD;AACA,iE;AACA,oB;AACA,gE;AACA,e;AACA,2E;AACA,2E;AACA,4E;AACA,2E;AACA,uE;;AAEA,kC;AACA,iC;AACA,wB;AACA,e;AACA,mB;AACA,sB;AACA,Y;AACA,kC;AACA,mB;AACA,wB;AACA,c;AACA,qB;AACA,sB;AACA,O;AACA,K;AACA,0C;AACA,0B;AACA,sB;AACA,4C;AACA,4B;AACA,0C;AACA,qD;AACA,6C;AACA,gC;AACA,qC;AACA,iE;AACA,4D;AACA,8B;AACA,O;AACA,U;AACA,sC;AACA,K;AACA,2C;AACA,iD;AACA,4B;AACA,2B;AACA,8D;AACA,oC;AACA,yB;AACA,uC;AACA,sD;AACA,gC;AACA,mC;AACA,Y;AACA,6B;AACA,Q;AACA,M;AACA,0B;AACA,e;AACA,I;AACA,qE;AACA,sB;AACA,G","sourcesContent":["/***\n * A convenient way to create DOM elements. ('cls' will be\n * automatically expanded to 'class', since 'class' may not appear as\n * a key of an object, even in quotes, in Safari.)\n *\n * DIV({cls: \"mydiv\", style: \"color: blue;\"}, [\n *   \"Some text\",\n *   A({href: \"/some/location\"}, [\"A link\"]),\n *   DIV({cls: \"emptydiv\"}),\n *   // if an object is inserted, the value of its 'element'\n *   // attribute will be used\n *   myView,\n *   DIV([\n *     \"Both the attributes and the contents are optional\",\n *     [\"Lists\", \"are\", \"flattened\"]\n *   })\n * ]);\n */\n\n// XXX find a place to document the contract for *View classes -- they\n// should have an attribute named 'element'\n\n// XXX consider not requiring the contents to be wrapped in an\n// array. eg: DIV({stuff: 12}, \"thing1\", \"thing2\"). backwards\n// compatible with current behavior due to array flattening. could\n// eliminate spurious wrapper div inserted by Layout.TwoColumnsFixedRight\n\n// XXX allow style to be set as an object\n\nvar event_names = {\n  blur: true,\n  change: true,\n  click: true,\n  dblclick: true,\n  error: true,\n  focus: true,\n  focusin: true,\n  focusout: true,\n  keydown: true,\n  keypress: true,\n  keyup: true,\n  load: true,\n  mousedown: true,\n  mouseenter: true,\n  mouseleave: true,\n  mousemove: true,\n  mouseout: true,\n  mouseover: true,\n  mouseup: true,\n  resize: true,\n  scroll: true,\n  select: true,\n  submit: true\n};\n\nvar testDiv = document.createElement(\"div\");\ntestDiv.innerHTML = '<a style=\"top:1px\">a</a>';\nvar styleGetSetSupport = /top/.test(testDiv.firstChild.getAttribute(\"style\"));\n\n// All HTML4 elements, excluding deprecated elements\n// http://www.w3.org/TR/html4/index/elements.html\n// also excluding the following elements that seem unlikely to be\n// used in the body:\n// HEAD, HTML, LINK, MAP, META, NOFRAMES, NOSCRIPT, STYLE, TITLE\nvar tag_names =\n  ('A ABBR ACRONYM B BDO BIG BLOCKQUOTE BR BUTTON CAPTION CITE CODE COL ' +\n   'COLGROUP DD DEL DFN DIV DL DT EM FIELDSET FORM H1 H2 H3 H4 H5 H6 HR ' +\n   'I IFRAME IMG INPUT INS KBD LABEL LEGEND LI OBJECT OL OPTGROUP OPTION ' +\n   'P PARAM PRE Q S SAMP SCRIPT SELECT SMALL SPAN STRIKE STRONG SUB SUP ' +\n   'TABLE TBODY TD TEXTAREA TFOOT TH THEAD TR TT U UL VAR').split(' ');\n\n_.each(tag_names, function (tag) {\n  var f = function (arg1, arg2) {\n    var attrs, contents;\n    if (arg2) {\n      attrs = arg1;\n      contents = arg2;\n    } else {\n      if (arg1 instanceof Array) {\n        attrs = {};\n        contents = arg1;\n      } else {\n        attrs = arg1;\n        contents = [];\n      }\n    }\n    var elt = document.createElement(tag);\n    for (var a in attrs) {\n      if (a === 'cls')\n        elt.setAttribute('class', attrs[a]);\n      else if (a === '_for')\n        elt.setAttribute('for', attrs[a]);\n      else if (a === 'style' && ! styleGetSetSupport)\n        elt.style.cssText = String(attrs[a]);\n      else if (event_names[a]) {\n        if (typeof $ === \"undefined\")\n          throw new Error(\"Event binding is supported only if \" +\n                          \"jQuery or similar is available\");\n        ($(elt)[a])(attrs[a]);\n      }\n      else\n        elt.setAttribute(a, attrs[a]);\n    }\n    var addChildren = function (children) {\n      for (var i = 0; i < children.length; i++) {\n        var c = children[i];\n        if (!c && c !== '')\n          throw new Error(\"Bad value for element body: \" + c);\n        else if (c instanceof Array)\n          addChildren(c);\n        else if (typeof c === \"string\")\n          elt.appendChild(document.createTextNode(c));\n        else if ('element' in c)\n          addChildren([c.element]);\n        else\n          elt.appendChild(c);\n      };\n    };\n    addChildren(contents);\n    return elt;\n  };\n  // Put the function onto the package-scope variable with this name.\n  eval(tag + \" = f;\");\n});\n"]}