{"version":3,"file":"/packages/basicFileTypes:plugin.js","sources":["basicFileTypes/plugin/basic-file-types.js"],"names":[],"mappings":";;;;;;;;;;AAAA,sE;AACA,iE;AACA,kB;;AAEA,4D;AACA,mE;AACA,6C;AACA,gE;AACA,qE;AACA,qE;AACA,4D;AACA,W;AACA,G;;AAEA,6B;AACA,8C;AACA,+B;AACA,K;AACA,G","sourcesContent":["/* \"js\" handler is now hardcoded in packages.js.. necessarily, because\n   we can't exactly define the *.js source file handler in a *.js\n   source file. */\n\nPlugin.registerSourceHandler(\"css\", function (compileStep) {\n  // XXX annoying that this is replicated in .css, .less, and .styl\n  if (! compileStep.archMatches('browser')) {\n    // XXX in the future, might be better to emit some kind of a\n    // warning if a stylesheet is included on the server, rather than\n    // silently ignoring it. but that would mean you can't stick .css\n    // at the top level of your app, which is kind of silly.\n    return;\n  }\n\n  compileStep.addStylesheet({\n    data: compileStep.read().toString('utf8'),\n    path: compileStep.inputPath\n  });\n});\n"]}