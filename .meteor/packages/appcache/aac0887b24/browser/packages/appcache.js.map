{"version":3,"file":"/packages/appcache.js","sources":["appcache/appcache-client.js"],"names":[],"mappings":";;;;;;;;AAAA,8B;;AAEA,wB;AACA,a;AACA,S;AACA,a;AACA,gB;AACA,gB;AACA,Y;AACA,E;;AAEA,6B;AACA,uB;AACA,4B;;AAEA,+C;AACA,sB;AACA,kB;;AAEA,uE;AACA,gB;AACA,0E;AACA,kB;;AAEA,0B;AACA,S;AACA,uC;AACA,iB;AACA,wD;AACA,8E;AACA,oB;AACA,K;AACA,4B;AACA,G;;AAEA,0D;AACA,sB;AACA,e;AACA,G;;AAEA,sE;AACA,8B;AACA,qC;AACA,wB;AACA,W;AACA,yB;AACA,gB;AACA,E;;AAEA,mF;AACA,gF;;AAEA,mE;AACA,gE;AACA,+D;AACA,yC;;AAEA,kE;AACA,oB;AACA,yB;AACA,G;AACA,Q;AACA,2B;AACA,qB;AACA,G;AACA,W;;AAEA,+B","sourcesContent":["if (window.applicationCache) {\n\nvar appCacheStatuses = [\n  'uncached',\n  'idle',\n  'checking',\n  'downloading',\n  'updateready',\n  'obsolete'\n];\n\nvar updatingAppcache = false;\nvar reloadRetry = null;\nvar appcacheUpdated = false;\n\nReload._onMigrate('appcache', function(retry) {\n  if (appcacheUpdated)\n    return [true];\n\n  // An uncached application (one that does not have a manifest) cannot\n  // be updated.\n  if (window.applicationCache.status === window.applicationCache.UNCACHED)\n    return [true];\n\n  if (!updatingAppcache) {\n    try {\n      window.applicationCache.update();\n    } catch (e) {\n      Meteor._debug('applicationCache update error', e);\n      // There's no point in delaying the reload if we can't update the cache.\n      return [true];\n    }\n    updatingAppcache = true;\n  }\n\n  // Delay migration until the app cache has been updated.\n  reloadRetry = retry;\n  return false;\n});\n\n// If we're migrating and the app cache is now up to date, signal that\n// we're now ready to migrate.\nvar cacheIsNowUpToDate = function() {\n  if (!updatingAppcache)\n    return;\n  appcacheUpdated = true;\n  reloadRetry();\n};\n\nwindow.applicationCache.addEventListener('updateready', cacheIsNowUpToDate, false);\nwindow.applicationCache.addEventListener('noupdate', cacheIsNowUpToDate, false);\n\n// We'll get the obsolete event on a 404 fetching the app.manifest:\n// we had previously been running with an app cache, but the app\n// cache has now been disabled or the appcache package removed.\n// Reload to get the new non-cached code.\n\nwindow.applicationCache.addEventListener('obsolete', (function() {\n  if (reloadRetry) {\n    cacheIsNowUpToDate();\n  }\n  else {\n    appcacheUpdated = true;\n    Reload._reload();\n  }\n}), false);\n\n} // if window.applicationCache"]}